<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--Spring配置文件, 这里主要配置和业务逻辑有关的-->
    <!--数据源、事务控制、... -->

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--1.数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.passwd}"/>
    </bean>

    <!--2.扫描业务逻辑组件-->
    <context:component-scan base-package="com.wxl.sms">
        <!--除了控制器其它的都要-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--3.配置Spring整合MyBatis-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--MyBatis全局配置文件位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <!--指定MyBatis的mapper文件位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--配置一个可以执行批量的sqlSession-->
    <!--    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
    <!--        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>-->
    <!--        <constructor-arg name="executorType" value="BATCH"/>-->
    <!--    </bean>-->

    <!--4.配置扫描器, 将MyBatis接口的实现加入到IOC容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有的dao接口的实现加入到IOC容器中-->
        <property name="basePackage" value="com.wxl.sms.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
    </bean>

    <!--5.事务控制-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制住数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--6.开启基于注解的事务/XML配置的事务(重要的都是使用配置)-->
    <aop:config>
        <!--切入点表达式-->
        <aop:pointcut id="txPoint" expression="execution(* com.wxl.sms.service..*(..))"/>
        <!--配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>

    <!--配置事务增强(事务如何切入)-->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!--所有方法都是事务方法-->
            <tx:method name="*"/>
            <!--以get开始的所有方法(认为是查询, 可以调优)-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <tx:annotation-driven/>

    <!--Spring配置文件的核心
    1.数据源
    2.整合MyBatis
    3.事务控制
    -->

<!--    <bean class="org.springframework.web.filter.CharacterEncodingFilter">-->
<!--    </bean>-->
</beans>